"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[945],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>k});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var d=a.createContext({}),p=function(e){var t=a.useContext(d),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=p(e.components);return a.createElement(d.Provider,{value:t},e.children)},m="mdxType",s={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,d=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),m=p(n),u=r,k=m["".concat(d,".").concat(u)]||m[u]||s[u]||o;return n?a.createElement(k,i(i({ref:t},c),{},{components:n})):a.createElement(k,i({ref:t},c))}));function k(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=u;var l={};for(var d in t)hasOwnProperty.call(t,d)&&(l[d]=t[d]);l.originalType=e,l[m]="string"==typeof e?e:r,i[1]=l;for(var p=2;p<o;p++)i[p]=n[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},7288:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>i,default:()=>m,frontMatter:()=>o,metadata:()=>l,toc:()=>p});var a=n(7462),r=(n(7294),n(3905));const o={},i="createModalProvider",l={unversionedId:"api/createModalProvider",id:"api/createModalProvider",title:"createModalProvider",description:"Creates ModalProvider - a wrapper react component for your app with needed components.",source:"@site/docs/api/createModalProvider.md",sourceDirName:"api",slug:"/api/createModalProvider",permalink:"/react-native-unicorn-modals/docs/api/createModalProvider",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"ModalProvider",permalink:"/react-native-unicorn-modals/docs/api/ModalProvider"},next:{title:"useModals",permalink:"/react-native-unicorn-modals/docs/api/useModals"}},d={},p=[{value:"Arguments",id:"arguments",level:2},{value:"<code>components</code>",id:"components",level:3},{value:"<code>options</code>",id:"options",level:3},{value:"<code>animationWorklet</code>",id:"animationworklet",level:4}],c={toc:p};function m(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"createmodalprovider"},(0,r.kt)("inlineCode",{parentName:"h1"},"createModalProvider")),(0,r.kt)("p",null,"Creates ",(0,r.kt)("a",{parentName:"p",href:"/react-native-unicorn-modals/docs/api/ModalProvider"},(0,r.kt)("inlineCode",{parentName:"a"},"ModalProvider"))," - a wrapper react component for your app with needed components."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"import { createModalProvider, Alert, Menu, scale } from 'react-native-unicorn-modals';\n\nconst components = {\n  alert: Alert,\n  menu: Menu,\n};\nconst options = {\n  animationDuration: 400,\n  animationWorklet: scale,\n};\nconst Provider = createModalProvider(components, options);\n")),(0,r.kt)("h2",{id:"arguments"},"Arguments"),(0,r.kt)("h3",{id:"components"},(0,r.kt)("inlineCode",{parentName:"h3"},"components")),(0,r.kt)("p",null,"Simple object where key is a string which will be used to show component and value - is a React component."),(0,r.kt)("h3",{id:"options"},(0,r.kt)("inlineCode",{parentName:"h3"},"options")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Option"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Default"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"animationDuration")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"350")),(0,r.kt)("td",{parentName:"tr",align:null},"Modal show/hide animation duration in milliseconds")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"animationWorklet")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"function")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"slideUp")),(0,r.kt)("td",{parentName:"tr",align:null},"Reanimated worklet function")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"hardwareAccelerated")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"boolean")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"true")),(0,r.kt)("td",{parentName:"tr",align:null},"Force hardware acceleration for the underlying window. ",(0,r.kt)("a",{parentName:"td",href:"https://reactnative.dev/docs/modal#hardwareaccelerated-android"},"Standard React Native prop"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"statusBarTranslucent")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"boolean")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"true")),(0,r.kt)("td",{parentName:"tr",align:null},"Determines whether your modal should go under the system statusbar. ",(0,r.kt)("a",{parentName:"td",href:"https://reactnative.dev/docs/modal#statusbartranslucent-android"},"Standard React Native prop"),".")))),(0,r.kt)("h4",{id:"animationworklet"},(0,r.kt)("inlineCode",{parentName:"h4"},"animationWorklet")),(0,r.kt)("p",null,"This function should return styles object for ",(0,r.kt)("inlineCode",{parentName:"p"},"Animated.View")," based on ",(0,r.kt)("inlineCode",{parentName:"p"},"progressValue")," (first argument of function)."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"function customWorklet(progressValue) {\n  'worklet';\n  return { opacity: progressValue };\n}\n")),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"Learn more about animations ",(0,r.kt)("a",{parentName:"p",href:"/react-native-unicorn-modals/docs/guides/animations"},"here"),".")),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"Learn more about ",(0,r.kt)("strong",{parentName:"p"},"React Native Reanimated")," worklet functions on ",(0,r.kt)("a",{parentName:"p",href:"https://docs.swmansion.com/react-native-reanimated/docs/fundamentals/worklets/"},"official documentation"),".")))}m.isMDXComponent=!0}}]);