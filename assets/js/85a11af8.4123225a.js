"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[322],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>h});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},u=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},m="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),m=c(n),p=a,h=m["".concat(s,".").concat(p)]||m[p]||d[p]||o;return n?r.createElement(h,l(l({ref:t},u),{},{components:n})):r.createElement(h,l({ref:t},u))}));function h(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,l=new Array(o);l[0]=p;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i[m]="string"==typeof e?e:a,l[1]=i;for(var c=2;c<o;c++)l[c]=n[c];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},5162:(e,t,n)=>{n.d(t,{Z:()=>l});var r=n(7294),a=n(6010);const o="tabItem_Ymn6";function l(e){let{children:t,hidden:n,className:l}=e;return r.createElement("div",{role:"tabpanel",className:(0,a.Z)(o,l),hidden:n},t)}},5488:(e,t,n)=>{n.d(t,{Z:()=>p});var r=n(7462),a=n(7294),o=n(6010),l=n(2389),i=n(7392),s=n(7094),c=n(2466);const u="tabList__CuJ",m="tabItem_LNqP";function d(e){const{lazy:t,block:n,defaultValue:l,values:d,groupId:p,className:h}=e,f=a.Children.map(e.children,(e=>{if((0,a.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),b=d??f.map((e=>{let{props:{value:t,label:n,attributes:r}}=e;return{value:t,label:n,attributes:r}})),v=(0,i.l)(b,((e,t)=>e.value===t.value));if(v.length>0)throw new Error(`Docusaurus error: Duplicate values "${v.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const y=null===l?l:l??f.find((e=>e.props.default))?.props.value??f[0].props.value;if(null!==y&&!b.some((e=>e.value===y)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${y}" but none of its children has the corresponding value. Available values are: ${b.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:g,setTabGroupChoices:k}=(0,s.U)(),[T,w]=(0,a.useState)(y),C=[],{blockElementScrollPositionUntilNextRender:j}=(0,c.o5)();if(null!=p){const e=g[p];null!=e&&e!==T&&b.some((t=>t.value===e))&&w(e)}const N=e=>{const t=e.currentTarget,n=C.indexOf(t),r=b[n].value;r!==T&&(j(t),w(r),null!=p&&k(p,String(r)))},O=e=>{let t=null;switch(e.key){case"Enter":N(e);break;case"ArrowRight":{const n=C.indexOf(e.currentTarget)+1;t=C[n]??C[0];break}case"ArrowLeft":{const n=C.indexOf(e.currentTarget)-1;t=C[n]??C[C.length-1];break}}t?.focus()};return a.createElement("div",{className:(0,o.Z)("tabs-container",u)},a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":n},h)},b.map((e=>{let{value:t,label:n,attributes:l}=e;return a.createElement("li",(0,r.Z)({role:"tab",tabIndex:T===t?0:-1,"aria-selected":T===t,key:t,ref:e=>C.push(e),onKeyDown:O,onClick:N},l,{className:(0,o.Z)("tabs__item",m,l?.className,{"tabs__item--active":T===t})}),n??t)}))),t?(0,a.cloneElement)(f.filter((e=>e.props.value===T))[0],{className:"margin-top--md"}):a.createElement("div",{className:"margin-top--md"},f.map(((e,t)=>(0,a.cloneElement)(e,{key:t,hidden:e.props.value!==T})))))}function p(e){const t=(0,l.Z)();return a.createElement(d,(0,r.Z)({key:String(t)},e))}},2656:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>m,frontMatter:()=>o,metadata:()=>i,toc:()=>c});var r=n(7462),a=(n(7294),n(3905));n(5488),n(5162);const o={sidebar_position:2},l="Themes",i={unversionedId:"themes",id:"themes",title:"Themes",description:"Themes allow you to change the colors of various components provided by library. You can use themes to:",source:"@site/docs/themes.md",sourceDirName:".",slug:"/themes",permalink:"/react-native-unicorn-modals/docs/themes",draft:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Quick Start",permalink:"/react-native-unicorn-modals/docs/quick-start"},next:{title:"Typescript",permalink:"/react-native-unicorn-modals/docs/typescript"}},s={},c=[{value:"Basic usage",id:"basic-usage",level:2},{value:"Change and extend themes",id:"change-and-extend-themes",level:2},{value:"Access theme object in components",id:"access-theme-object-in-components",level:2}],u={toc:c};function m(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"themes"},"Themes"),(0,a.kt)("p",null,"Themes allow you to change the colors of various components provided by library. You can use themes to:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Switch between light and dark mode"),(0,a.kt)("li",{parentName:"ul"},"Customize the colors match your brand")),(0,a.kt)("p",null,"Also you can extend themes to add additional colors for your custom components."),(0,a.kt)("h2",{id:"basic-usage"},"Basic usage"),(0,a.kt)("p",null,"Library contains 2 default theme:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"defaultThemeLight")," - default"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"defaultThemeDark"))),(0,a.kt)("p",null,"By default light theme is used. You can pass any of them to ",(0,a.kt)("inlineCode",{parentName:"p"},"ModalProvider"),", or switch between them like in next example:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js",metastring:"title=src/App.js",title:"src/App.js"},"import React, { useCallback, useState } from 'react';\nimport {\n  createModalProvider,\n  Alert,\n  // 1. Import default themes\n  // highlight-start\n  defaultThemeDark,\n  defaultThemeLight,\n  // highlight-end\n} from 'react-native-unicorn-modals';\n\nconst ModalProvider = createModalProvider({\n  alert: Alert,\n});\n\nconst App = () => {\n  const [theme, setTheme] = useState('dark');\n\n  // Switch theme somewhere in your app.\n  const switchTheme = useCallback(() => {\n    setTheme(theme === 'dark' ? 'light' : 'dark');\n  }, [theme]);\n\n  return (\n    // 2. Pass theme object into provider component as prop\n    // highlight-next-line\n    <ModalProvider theme={theme === 'dark' ? defaultThemeDark : defaultThemeLight}>\n      {/* <YourAppComponent /> */}\n    </ModalProvider>\n  );\n};\n\nexport default App;\n")),(0,a.kt)("h2",{id:"change-and-extend-themes"},"Change and extend themes"),(0,a.kt)("p",null,"If you are creating your own component, you might need to add more colors than the library provides by default."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js",metastring:"title=src/my-theme.js",title:"src/my-theme.js"},"// 1. Import default theme\nimport { defaultThemeLight } from 'react-native-unicorn-modals';\n\n// 2. Extend it with your properties\nconst myTheme = {\n  ...defaultThemeLight,\n  actionButtonColor: {\n    ...defaultThemeLight.actionButtonColor,\n    destructive: 'red', // Change default destructive button color\n  },\n  titleTextColor: '#111', // Change default title color\n  myCustomColor: 'red', // Add new property to use in your component\n};\n")),(0,a.kt)("admonition",{type:"caution"},(0,a.kt)("p",{parentName:"admonition"},"It is recommended to extend from the default theme (light or dark) to ensure that you do not miss any property.")),(0,a.kt)("h2",{id:"access-theme-object-in-components"},"Access theme object in components"),(0,a.kt)("p",null,"You can use the ",(0,a.kt)("inlineCode",{parentName:"p"},"useTheme")," hook inside any component which is rendered inside ",(0,a.kt)("inlineCode",{parentName:"p"},"ModalProvider")," to get access to theme object:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"import React from 'react';\nimport { TouchableOpacity, Text } from 'react-native';\nimport { useTheme } from 'react-native-unicorn-modals';\n\nfunction MyButton() {\n  const { actionButtonColor } = useTheme();\n\n  return (\n    <View style={{ backgroundColor: actionButtonColor.destructive }}>\n      <Text>Button</Text>\n    </View>\n  );\n}\n")))}m.isMDXComponent=!0}}]);